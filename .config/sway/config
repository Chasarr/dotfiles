### Variables


# Super key
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term kitty
# Your preferred application launcher
set $menu wofi --show=drun --allow-images --term=/usr/bin/kitty --prompt="" --insensitive

# Notification service
exec mako
### Output configuration
output HDMI-A-2 pos 1920 0 res 1920x1080
output DVI-D-1 pos 0 0 res 1920x1200
focus output HDMI-A-2			# Focuses on the big display at launch
workspace 1 output DVI-D-1		# Makes default workspace numbering logical. Workspace 1 at left, workplace 2 at right
workspace 2 output HDMI-A-2
output HDMI-A-2 {
	bg ~/Pictures/wallpapers/rocket.jpg stretch
	#max_render_time 2 
}
output DVI-D-1 bg ~/Pictures/wallpapers/ariane_v.jpg stretch

# Keyboard:
	input "type:keyboard" {
		xkb_layout "se"
		xkb_numlock enabled
		repeat_delay 300
    	repeat_rate 40
	}

# Mouse:
input "type:pointer" {
  accel_profile flat
  pointer_accel 0
  scroll_factor 2
}

# Use "wev" in the terminal to see what keys are named
bindsym $mod+KP_Add exec pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym $mod+KP_Subtract exec pactl set-sink-volume @DEFAULT_SINK@ -5%

# Theming
default_border pixel 2
client.focused  #5e81ac #5e81ac #eceff4 #5e81ac #5e81ac
client.focused_inactive #3b4252 #3b4252 #eceff4 #3b4252 #3b4252
client.unfocused #3b4252 #3b4252 #eceff4 #3b4252 #3b4252
client.urgent #d08770 #d08770 #eceff4 #d08770 #d08770
font Hack Nerd Font 10
gaps inner 5
gaps outer 5

# Flashfocus, flashes focused tiles
exec_always --no-startup-id flashfocus
# fcitx chinese input
#exec_always fcitx5 -d --replace

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'Logout?' -t nord -B 'Yes' 'swaymsg exit'
	bindsym $mod+Shift+s exec swaynag -t warning -m 'Suspend?' -t nord -b 'Yes' 'systemctl suspend'
	bindsym $mod+Shift+p exec swaynag -t warning -m 'Poweroff?' -t nord -b 'Yes' 'shutdown -h now'
	bindsym $mod+Shift+r exec swaynag -t warning -m 'Reboot?' -t nord -b 'Yes' 'shutdown -r now'
	bindsym $mod+Shift+t exec swaynag -t warning -m 'Notify?' -t nord -b 'Yes' 'notify-send 'Hello world!' 'This is an example notification' --icon=dialog-information'
	
	# Screenshots and copies to clipboard
	bindsym print exec 'grim -g "$(slurp)" -| wl-copy'
	# Screenshots and copies to clipboard with timer
	bindsym Ctrl+print exec '~/scripts/screenshot.sh 2'
	# Screenshots and saves
	bindsym Shift+print exec grim -g "$(slurp)"
	bindsym Control+Alt+Shift+r exec wf-recorder -a
	# Color picker
	bindsym Shift+ctrl+print exec grim -g "$(slurp -p)" -t ppm - | convert - -format '%[pixel:p{0,0}]' txt:- | tail -n 1 | cut -d ' ' -f 4 | wl-copy
	# Edit image in clipboard
	bindsym $mod+print exec 'wl-paste | swappy -f -'	#Edits image in clipboard with GUI

# TODO - fixa max_render_time

	# 
	bindsym $mod+y border toggle
	# Toggles pause and play, prioritises Spotify
	bindsym $mod+p exec "playerctl --player=spotify,%any play-pause"

	# Plays next song
	bindsym $mod+n exec "playerctl --player=spotify,%any next"

	# Plays previous song
	bindsym $mod+Shift+n exec "playerctl --player=spotify,%any previous"



# 
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+Shift+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

bar {
	swaybar_command waybar
}

# Dynamic tiling. Suck it Getz
exec_always --no-startup-id autotiling

#
## Applets
#
#exec_always --no-startup-id blueman-applet
#exec_always nwg-panel

#
## GTK slow startup fix
#
#exec systemctl --user import-environment DISPLAY WAYLAND_DISPLAY SWAYSOCK
#exec hash dbus-update-activation-environment 2>/dev/null && dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY SWAYSOCK
#
## Program specific window settings
#
#no_focus [title="TipWindow"]

# Automatically sets Discord as floating and puts it in scratchpad
for_window [class="discord" title="Discord$"] {
	floating enable
	resize set width 1800px height 1000px
	move to scratchpad
	scratchpad show
}
# Same with Signal
for_window [class="Signal$"] {
	floating enable
	resize set width 1800px height 1000px
	move to scratchpad
	scratchpad show
}

# Opens files
bindsym $mod+f exec nautilus

include @sysconfdir@/sway/config.d/*
